#!/usr/bin/env bb

(require '[clojure.string :as string])

(defn conf-to-border [conf]
  (let [[side-conf corner-conf] (string/split conf #" ")
        expand #(if (= 1 (count %))
                  (str % % % %)
                  %)]
    (zipmap [:top :right :bottom :left :top-left :top-right  :bottom-right :bottom-left]
            (str (expand side-conf)
                 (expand corner-conf)))))

(def border (conf-to-border "-|-| /\\/\\"))

(when-let [conf (System/getenv "BORDER")]
  (if-not (string/blank? conf)
    (def border (conf-to-border conf))))

(let [lines (string/split (slurp *in*) #"\n")
      lines (map (fn [line] (str " " line " ")) lines)
      width (->> lines
                 (sort-by count)
                 (last)
                 (count))
      {:keys [right left top bottom top-left bottom-left top-right bottom-right ]} border
      top-line (apply str `(~top-left ~@(repeat width top) ~top-right))
      bottom-line (apply str `(~bottom-left ~@(repeat width bottom) ~bottom-right))]

  (println top-line)
  (->> lines
       (map (partial format (format "%s%%-%ss%s" left width right)))
       (run! println))
  (println bottom-line))
