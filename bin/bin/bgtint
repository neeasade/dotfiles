#!/bin/sh

# take a tiled image, tint the colors

# most seen color
most_seen() {
    # convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | head -n 1 | awk '{print $2}' | sed 's/..$//'
    convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | head -n 1 | awk '{print $2}'
}

least_seen() {
    # convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | tail -n 1 | awk '{print $2}' | sed 's/..$//'
    convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | tail -n 1 | awk '{print $2}'
}

rand_tile() {
    # echo "/media/LIVEWIRE/Archive/other/squidd/pattern_125.gif"
    (

	# echo /home/neeasade/Downloads/upfeathers/out.png
	# cat /tmp/result_source.txt
	# echo /tmp/result.png

	# rg --files "$HOME/pngsave"
	# rg --files "/home/neeasade/git/tiles-and-such/[J] Retro Patterns/"

	# rg --files /media/LIVEWIRE/Archive/other/squid/
	# rg --files /media/LIVEWIRE/Archive/other/bgrepeat/
	# rg --files "$HOME/git/SubtlePatterns/"
	# rg --files /home/neeasade/git/tiles-and-such

	echo '/home/neeasade/git/SubtlePatterns/leather_1.png'

	# rg --files /home/neeasade/git/neeasade.github.io/site/assets/posts/ca_dump
	# rg --files /home/neeasade/git/neeasade.github.io/site/assets/posts/ca_dump2
	# $(lastshot)
	# echo '/media/CODERED/git/SubtlePatterns/out.png'

    ) | sort -R | head -n 1
}

# check if contrast matches
matches() {
    elisp "(eq
    (ct-is-light-p \"$1\")
    (ct-is-light-p \"$2\"))" >/dev/null \
	&& echo true || echo false
}

target=$(rand_tile)
# target=$(lastshot)
# background=D2D2FA
# background=D2C8FA


# target=/home/neeasade/Last_Shot/shot.png
# target='/media/CODERED/git/SubtlePatterns/out.png'
# foreground=D7CDFF
# background=$(theme getval background)

background=$(elisp -r "(tarp/get :primary)")
foreground=$(elisp -r "(tarp/get :background :focused)")

# foreground=$(lessen 40 "$foreground")
# background=$(lessen 30 "$background")

# foreground=$(lessen 30 "$foreground")
# background=$(lessen 30 "$background")


foreground=$(colort -t "$foreground")
background=$(colort -t "$background")



# background=$(theme getval background)

# try a few times
# if ! $(matches "$(most_seen "$target")" \#$background); then
#     target=$(rand_tile)
#     if ! $(matches "$(most_seen "$target")" \#$background); then
# 	target=$(rand_tile)
#     fi
# fi

# target='/home/neeasade/git/tiles-and-such/Solaris & CDE/solaris-raw-bitmaps/SolarisLogo.pm'
# note who we are inheriting from
echo "$target" > /tmp/result_source.txt
rm /tmp/result.png

# convert "$target" -fuzz "0%" -fill \#$background -opaque "$(most_seen "$target")" /tmp/result.png
# convert "/tmp/result.png" -fuzz "1%" -fill \#$foreground -opaque "$(least_seen "$target")" /tmp/result.png

# foreground=D7CDFF
# background=D7CDFF
# background=$(theme getval background)

set -x

cp "$target" /tmp/result.png

# convert "$target" -fuzz 3% -fill "#$background" -opaque '#0F1C25' /tmp/result.png
# convert /tmp/result.png -fuzz 3% -fill "#$foreground" -opaque '#FBFCFE' /tmp/result.png

# convert /tmp/result.png -resize 120% /tmp/result.png

color() {
    convert "/tmp/result.png" -fuzz "${1}%" -fill \#$foreground -opaque "$(least_seen "$target")" /tmp/result.png
    convert "/tmp/result.png" -fuzz "${2}%" -fill \#$background -opaque "$(most_seen "$target")" /tmp/result.png
}

# fuzz percentage fg bg
# color 10 22
# color 18 30
color 6 4
# color 3 3

echo "$target"
feh --bg-tile /tmp/result.png || "$0"
