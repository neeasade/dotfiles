#!/bin/sh

# take a tiled image, tint the colors

# most seen color
most_seen() {
    # convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | head -n 1 | awk '{print $2}' | sed 's/..$//'
    convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | head -n 1 | awk '{print $2}'
}

least_seen() {
    # convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | tail -n 1 | awk '{print $2}' | sed 's/..$//'
    convert "$1" txt:- | awk '{print $3}' | rg -v pixel | sort | uniq -c | sort | tail -n 1 | awk '{print $2}'
}

rand_tile() {
    # echo "/media/LIVEWIRE/Archive/other/squidd/pattern_125.gif"
    (
	# rg --files "$HOME/pngsave"

    	rg --files /media/LIVEWIRE/Archive/other/squid/
    	rg --files /media/LIVEWIRE/Archive/other/bgrepeat/
    	# rg --files "$HOME/git/SubtlePatterns/"
	# rg --files /home/neeasade/git/tiles-and-such

	rg --files /home/neeasade/git/neeasade.github.io/site/assets/posts/ca_dump
	# $(lastshot)
	# echo '/media/CODERED/git/SubtlePatterns/out.png'

	# use the existing picture:
	# cat /tmp/result_source.txt
	# echo "/home/neeasade/Screenshots_mpv/mpv-shot0003.jpg"
	# echo /home/neeasade/Screenshots_mpv/mpv-shot0042.jpg

    ) | sort -R | head -n 1
}

# check if contrast matches
matches() {
    elisp "(eq
    (ns/color-is-light-p \"$1\")
    (ns/color-is-light-p \"$2\"))" >/dev/null \
	&& echo true || echo false
}

target=$(rand_tile)
# target=$(lastshot)
# background=D2D2FA
# background=D2C8FA


# target=/home/neeasade/Last_Shot/shot.png
# target='/media/CODERED/git/SubtlePatterns/out.png'
# foreground=D7CDFF
# background=$(theme getval background)

# foreground=$(elisp -r "(->> :accent2 (ht-get ns/theme) ns/color-shorten ns/color-format)")
# background=$(elisp -r "(->> :background (ht-get ns/theme) ns/color-shorten ns/color-format)")

foreground=$(elisp -r "(ht-get ns/theme :accent1)")
# background=$(elisp -r "(ht-get ns/theme :accent2)")
background=$(elisp -r "(ht-get ns/theme :background__)")

foreground=$(lessen 40 "$foreground")
# background=$(lessen 60 "$background")

foreground=$(colort -t "$foreground")
background=$(colort -t "$background")



# background=$(theme getval background)

# try a few times
# if ! $(matches "$(most_seen "$target")" \#$background); then
#     target=$(rand_tile)
#     if ! $(matches "$(most_seen "$target")" \#$background); then
# 	target=$(rand_tile)
#     fi
# fi

# target='/home/neeasade/git/tiles-and-such/Solaris & CDE/solaris-raw-bitmaps/SolarisLogo.pm'
# note who we are inheriting from
echo "$target" > /tmp/result_source.txt
rm /tmp/result.png

# convert "$target" -fuzz "0%" -fill \#$background -opaque "$(most_seen "$target")" /tmp/result.png
# convert "/tmp/result.png" -fuzz "1%" -fill \#$foreground -opaque "$(least_seen "$target")" /tmp/result.png

# foreground=D7CDFF
# background=D7CDFF
# background=$(theme getval background)

set -x

cp "$target" /tmp/result.png

# convert "$target" -fuzz 3% -fill "#$background" -opaque '#0F1C25' /tmp/result.png
# convert /tmp/result.png -fuzz 3% -fill "#$foreground" -opaque '#FBFCFE' /tmp/result.png

# convert /tmp/result.png -resize 110% /tmp/result.png

color() {
    convert "/tmp/result.png" -fuzz "${1}%" -fill \#$foreground -opaque "$(least_seen "$target")" /tmp/result.png
    convert "/tmp/result.png" -fuzz "${2}%" -fill \#$background -opaque "$(most_seen "$target")" /tmp/result.png
}

# fuzz percentage fg bg
# color 2 5
color 5 2


feh --bg-tile /tmp/result.png
