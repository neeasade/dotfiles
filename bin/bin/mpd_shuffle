#!/usr/bin/env bb
;; shuffle by album
;; todo: better cue file support

(require '[clojure.java.shell :as shell]
         '[clojure.string :as string]
         '[babashka.fs :as fs])

(def music-dir "/home/neeasade/Music")

(defn is-long
  [song]
  (let [length-str (:out
                    (shell/sh "mediainfo" "--Inform=Audio;%Duration%"
                              (str music-dir "/" song)))
        length-ms (if (string/blank? (string/trim length-str))
                    ;; (do (prn "oops!") 0)
                    0
                    (read-string length-str))]
    (> (/ length-ms 1000)
       (* 60 15))))

(->> (string/split (:out (shell/sh "mpc" "playlist" "-f" "%file%"
                                   :out-enc "UTF-8"
                                   )) #"\n")
     (sort)
     (distinct)
     (group-by
      (fn [path]
        (->> (string/split path #"/")
             (drop-last)
             (string/join "/"))))
     (mapcat (fn [[dir songs]]
               (let [is-indexed-album-strict? false ; todo: do all the numbers go up continuously
                     is-indexed-album? (every? #(re-matches #"[0-9].+" (fs/file-name %)) songs)
                     is-misc-album? (and ; idk man
                                     (< 4 (count songs) 17)
                                     (every? (complement is-long) songs))]
                 (cond
                   is-indexed-album? [[dir songs]]
                   is-misc-album? [[dir (into [] (sort-by #(fs/last-modified-time (str music-dir "/" %)) songs))]]
                   :else
                   (map (fn [album] [dir [album]])
                        (filter is-long songs))))))
     (shuffle)
     (mapcat second)
     (string/join "\n")
     (println))
