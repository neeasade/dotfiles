#!/bin/sh
# switch to tab with $url or open $url
# if no url found, goto or open qutebrowser window
# todo: consider basename domain vs fullname comparison

url=$1

# domain=
# domain=$(echo "$url" | awk -F/ '{print $3}')

focus_qb_window() {
    for wid in $(bspc query -N -n .window); do
	if xprop WM_CLASS -id $wid | grep qutebrowser; then

	    bspc node $wid -g hidden=off
	    bspc node -f $wid

	    # if wid is in a hidden tag, show it
	    if status=$(btags state-plain | grep $wid | grep false); then
		btags toggle $(echo "$status" | awk '{print $1}')
	    fi

	    break
	fi
    done
}

vanilla() {
    if [ -z "$url" ]; then
	if ! pgrep qutebrowser; then
	    # wayland, force software render
	    # todo: add a check
	    if [ -z "$WAYLAND_DISPLAY" ]; then
		qutebrowser
	    else
		# this is really only needed with nouveu
		LIBGL_ALWAYS_SOFTWARE=1 qutebrowser
	    fi
	    exit 0
	fi
    else
	# this is faster than
	# qutebrowser "$url"
	qb_command ":open -t $url"
    fi

    focus_qb_window
    exit 0
}

if ! pgrep qutebrowser; then
    vanilla
fi

if [ -z "$url" ]; then
    vanilla
fi

# this is probably more like xdg-open logic
if echo "$url" | grep -qE "youtu.be|youtube.com"; then
    # there is a delay before window launch, so let me know now:
    notify-send "launching in MPV"
    # todo: this isn't teneble unless you copy to clip or something as well, to share I think
    mpv "$url"
    exit 0
fi

if echo "$url" | grep -qE "bandcamp.com"; then
    # if qutebrowser gets mpris support this can go away
    google-chrome-stable "$url"
    exit 0
fi

session_file="${HOME}/.local/share/qutebrowser/sessions/_autosave.yml"

# all the open urls (last in history is the current viewed thing)
if ! sed -E '/^  geometry/,+2d' "$session_file" | yq -r '.windows[0].tabs[] | .history[-1] | .url' | grep -q "$url"; then
    vanilla
fi

# do the same thing as above, but compare the url, grabbing the title
matching_title=$(sed -E '/^  geometry/,+2d' "$session_file" | yq -r '.windows[0].tabs[] | .history[-1] | select(.url == "'"${url}"'") | .title' | head -n 1)

if [ -z "$matching_title" ]; then
    echo no found title
    vanilla
fi

qb_command ":buffer $matching_title"
focus_qb_window
