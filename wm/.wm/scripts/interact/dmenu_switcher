#!/usr/bin/env bash
# all switcher dmenu
# idea: qutebrowser history
# idea: org headings

options=
declare -A matches_to_actions

add_switch() {
  options="${options}"$'\n'"${1}"
  matches_to_actions["$1"]=$2
}

add_windows() {
    for wid in $(bspc query -N -n .leaf); do
	add_switch "window: $(xtitle $wid)" "bspc node $wid -g hidden=off; bspc node -f $wid"
    done
}

add_emacs_buffers() {
    buffers=$(elisp -r '(->> (ns/jump-file-candidates) (mapcar (function s-clean)) (ns/make-lines))')

    emacs_switch_to() {
	filepath=$*
	# todo: find the most recent emacs window and use that
	elisp "(find-file \"${filepath}\")"
    }

    for buffer in $buffers; do
	# add_switch "buffer: $buffer" "select_action 'window: emacs'; elisp '(find-file \"${buffer}\")'"

	# note: this will break if ever switching to a file with a ' in the name
	add_switch "buffer: $buffer" "emacs_switch_to '$buffer'"
    done
}

add_qutebrowser_tabs() {
    open_titles() {
	grep -A 6 '    \- active: true' "$HOME/.local/share/qutebrowser/sessions/default.yml" | grep title | sed 's/.*title: //'
    }

    qute_switch_to() {
	title=$*
	select_action '\- qutebrowser'
	qb_command ":buffer $title"
    }

    while read -r title; do
	add_switch "tab: $title" "qute_switch_to '$(echo "$title" | sed "s/'//g;s/\"// ")'"
    done <<< "$(open_titles)"
}

select_action() {
  # allow partial match
  target=$(echo "$options" | grep "$*" | head -n 1)
  echo "${matches_to_actions[${target}]}"
  eval "${matches_to_actions[${target}]}"
}

add_windows
add_qutebrowser_tabs
add_emacs_buffers

select_action "$(echo "$options" | dmenu "$@")"
