#!/usr/bin/env bash

### OPTIONS ###

# p_title_show_mode
# active - only active
# all - all all the time
# monocle - only active when tiling, all when monocle
show_mode=${p_title_show_mode:-monocle}

# Maxium window title length
maxWinNameLen=${maxWinNameLen:-25}

# not setting any settings if $onlyShowActive.
# _meta="$(which meta)"
# meta() {
#     ! $onlyShowActive && eval $_meta "$*"
# }

# set $1 length to $maxWinNameLen chars (trim or pad)
setLength() {
    content="$(echo "$1" | cut -c 1-$maxWinNameLen)"

    count=$(echo $content | wc -c)
    remain=$(( $maxWinNameLen - $count ))
    [ $(( $remain % 2 )) -ne 0 ] && remain=$(( $remain + 1 ))
    padding=
    for i in $(seq $(( $remain / 2))); do
        padding="$padding "
    done

    if $onlyShowActive; then
      meta bar_center_delimiter=""
      icon window
      meta bar_center_delimiter="$bar_center_delimiter"
      echo -n "$content";
    else
      echo -n "$padding$content$padding";
    fi
}

declare -A titleMap

doTheThing() {
    case $show_mode in
        all) onlyShowActive=false;;
        active) onlyShowActive=true;;
        monocle)
            [ "$(bspc query -T -d | jq -r .layout)" = "monocle" ] && \
                onlyShowActive=false || \
                onlyShowActive=true
            ;;
    esac

    $onlyShowActive && $_meta active

    meta start
    active="$(bspc query -N -n)"

    if $onlyShowActive; then
      input="$(bspc query -N -d focused -n .focused.active || echo '')"
    else
      input="$(bspc query -N -d focused -n .window || echo '')"
    fi

    while read -r wid; do
        [[ -z "$wid" ]] && continue

        # fill in if empty
        if [[ -z "${titleMap[$wid]}" ]] ||
               [[ "$wid" = "$active" ]] ||
                ! $onlyShowActive; then
           titleMap[$wid]=$(setLength "$(xtitle $wid)")
        fi

        # print
        [[ "$wid" = "$active" ]] && meta active
        meta mouse_left bspc node -f $wid
        echo "${titleMap[$wid]}"
        [[ "$wid" = "$active" ]] && meta reset

      done < <(echo "$input")

    # empty desktop case.
    [[ -z "$input" ]] && echo ""
    meta end
}

# initial fireoff:
# doTheThing

while read -r trigger; do
    # doTheThing
    xtitle
done
