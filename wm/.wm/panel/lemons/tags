#!/usr/bin/env bash

# ;; OK: underline when inactive but with wids
# ;; else just background color if active, no background if not turned on

p_bg_inactive=$(theme -q color.weak.background)
# p_bg_inactive=#000000

render() {
    current=$(bspc query -N -n)

    result=$(btags state-plain | while read tname active color wids; do
	tag_name=$tname
	background=$p_bg_inactive

	if $active; then
	    if [ ! -z "$wids" ]; then
		background=$color
	    fi
	else
	    if [ ! -z "$wids" ]; then
		tname="${tname}*"
	    fi
	fi

	border=
	if echo "$wids" | grep -q $current; then
	    border=$(colort -l -40 $color)
	    tname="${tname}!"
	fi

	# height of the under/over determined from bar itself
	tname=$(bs ":${tname}" "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")

	printf '%s' "$(echo "$tname" | border=$border bg=$background FORCE=t season)"
    done
    )

    echo "$result"
}

render_smol() {
    current=$(bspc query -N -n)

    result=$(btags state-plain | while read tname active color wids; do
	tag_name=$tname
	background=$p_bg_inactive

	T=1
	if $active; then
	    T=2
	    if [ ! -z "$wids" ]; then
		background=$color
	    fi
	else
	    T=1
	    if [ ! -z "$wids" ]; then
		tname="${tname}*"
	    fi
	fi

	border=

	if echo "$wids" | grep -q $current; then
	    border=$(colort -l -40 $color)
	    tname="${tname}!"
	fi

	# height of the under/over determined from bar itself
	# printf "%s^" "$(bs ": ${tname} " "U$border" +u +o B$background "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"
	# printf "%s^" "$(bs ": ${tname} " "U$border" +u +o T$T "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"

	printf "%s^" "$(bs ": ${tname} " T$T "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"

	# printf '%s' "$(echo "$tname" | border=$border bg=$background FORCE=t season)"
    done
    )

    echo "$(echo "$result" | rev | sed 's/\^//' | rev | sed 's/\^/·/g')"
}

render_supersmol() {
    current=$(bspc query -N -n)

    result=$(btags state-plain | while read tname active color wids; do
	tag_name=$tname
	# foreground=$(colort -50 "$bg")
	foreground=$fg

	tname=${tname:0:1}

	T=1
	if $active; then
	    # foreground=$p_fg_inactive
	    # foreground=$(colort -l 40 "$foreground")
	    if [ ! -z "$wids" ]; then
		# tname="${tname}!"
		T=2
	    fi
	else
	    if [ ! -z "$wids" ]; then
		tname="${tname}*"
		T=1
	    fi
	fi

	border=
	if echo "$wids" | grep -q $current; then
	    border=$(colort -l -20 $color)
	    # tname="${tname}!"
	    tname="[${tname}]"
	    # tname="「${tname}」"
	fi

	# height of the under/over determined from bar itself
	# printf "%s^" "$(bs ": ${tname} " "U$border" +u +o B$background "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"
	# printf "%s^" "$(bs ": ${tname} " "U$border" +u +o T$T "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"

	# notify-send "$foreground"
	printf "%s" "$(bs ":${tname}" T$T "B$bg" "F$foreground" "A3btags toggle-wids $tag_name \$(bspwindows)" "A1btags toggle $tag_name")"
    done
    )

    # echo "$(echo "$result" | rev | sed 's/\^//' | rev | sed 's/\^/·/g')"
    # echo "$result" | FORCE=t season

    # export FORCE=t
    echo "$result"
}

draw() {
    # render
    render_smol
    # render_supersmol
}

draw

bspc subscribe node_flag node_state node_focus | \
    while read -r trigger; do
	draw
    done
