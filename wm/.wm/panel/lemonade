#!/usr/bin/env bash

bspc config top_padding $(theme -q panel.height)

geom=$(
    dim() {
	bspc query -T -m | jq .rectangle.$1
    }

    p_gap=$(theme -q panel.gap)
    gapped=$(iif "[ ! $(bspc config window_gap) -le 0 ]")
    p_gap=$(iif $gapped $p_gap 0)

    top=$(theme -q panel.top)
    # can we do this with a render
    echo "$(( $(dim width)-(p_gap*2) ))x$p_height+$(( $(dim x)+p_gap ))+$(iif $top $p_gap $(($(dim height)-(p_gap+p_height))) )"
)

# eg desktop:circe_dms:title|org_task|mpd:volume:clock
# -> $desktop $circe_dms $title %{c}$org_task %{r}mpd $volume $clock
format=$(theme -q panel.format)
format=$(echo "$format" | sed 's/:/$/g' | sed 's/|/%{c}$/' | sed 's/|/%{r}$/' )
format="\$$format"

# stdbuf -oL all the things.
# this has been poked at alot by a tired me, I think it's good now.
stdbuf -oL i3blocks -o j | \
    stdbuf -oL sed 's/\},/}\n,/g' | \
    stdbuf -oL sed -n 's/^,//;s/^\[//;s/\]$//;/^{/p' | \
    stdbuf -oL jq -r '.name + " " + .full_text' | \
    while IFS=$'\n' read -r event; do
	export "${event%% *}=${event#* }"
	eval "printf '%s\n' \"$format\""
    done | stdbuf -oL debounce.js 30 | \
	lemonbar -d \
	    -u 2 \
	    -n "$(theme -q panel.window-class)" \
	    -B \#00$(theme -q color.normal.background) \
	    -F \#ff$(theme -q color.normal.foreground) \
	    -f "$(theme -q font.panel.spec)" \
	    -f "$(theme -q font.panel.spec):style=Bold" \
	    -f "$(theme -q font.icon.spec)" \
	    -f "DejaVu Sans Mono for Powerline-10" \
	    -o -1 \
	    -o -1 \
	    -o -4 \
	    -o -2 \
	    -a 20 \
	    -g "$geom" | sh &

wid=$(xdo id -m -a "$(theme -q panel.window-class)")
xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

cleanup() {
    bspc config top_padding 0

    trap - TERM; kill 0
}
trap cleanup INT TERM QUIT EXIT

wait
