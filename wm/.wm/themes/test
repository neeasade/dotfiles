#!/usr/bin/env bash
# idea: bspwm colors from emacs as well

# test theme
colors() {
    color0=F3F5F8
    color1=A95011
    color2=5E7111
    color3=C38418
    color4=176FA8
    color5=407EE7
    color6=E71FD2
    color7=3F4043
    color8=898A8D
    color9=A95011
    color10=5E7111
    color11=C38418
    color12=176FA8
    color13=407EE7
    color14=E71FD2
    color15=3F4043
    foreground=3f4043
    background=f3f5f8
    cursorColor=176fa8
}

settings() {
    # theme
    # BG_COMMAND="feh --bg-tile /home/neeasade/git/neeasade.net/pattern_125.gif"
    BG_COMMAND="${HOME}/.fehbg"

    # emacs_theme="apropospriate-light"
    # emacs_theme="base16-grayscale-light"
    emacs_theme="lab-light"
    emacs_powerline_scale="1.0"
    PROMPT_CHAR='%'
    PROMPT_CHAR='â™¥'

    # bspwm
    b_border_width=1

    # b_normal_border_color=B0A8A6
    # b_normal_border_color=$(colort -t $(lessen 20 $color0))

    b_normal_border_color=$(elisp -r "(ns/color-shorten (face-attribute 'mode-line-inactive :background))")
    b_normal_border_color=$(colort -t "$b_normal_border_color")

    b_window_gap=14
    b_window_gap=32
    b_window_width=10

    b_bspwmrc_extend="tag_borders &
subscription_rules &"

    x_padding=5

    # b_normal_border_color=eeeff0
    # b_active_border_color=cecece
    # b_focused_border_color=$(colort -b 20 -t $(lessen 10 $foreground))
    # b_focused_border_color=$(elisp -r '(face-attribute 'font-lock-variable-name-face :foreground)')
    b_focused_border_color=$(colort -t $(elisp -r "(face-attribute 'font-lock-variable-name-face :foreground)"))

    # p_gap=$(elisp '(frame-fringe-width)')
    p_gap=0

    p_bg_middle=$(elisp -r "(ns/color-shorten (face-attribute 'ns/mode-line-middle :background))")
    p_bg_active=$(elisp -r "(ns/color-shorten (face-attribute 'company-tooltip-selection :background))")
    p_fg_active=$foreground

    # elisp -r "(face-attribute 'region :background)"

    # p_bg_middle=$(elisp -r "(face-attribute 'ns/mode-line-inactive :background)")

    # p_fg_active="#ff525252"
    # p_format="org_task:title|tags|mpd:weather:clock"
    p_format="tags:title|org_task|mpd:weather:clock"
    # p_format="tags:title:misc:circe_dms|mpd|weather:clock"

    # p_format="battery|desktop|clock"
    # todo: offset should be per font -- it can be in lemonbar
    p_offset="-1"

    p_title_show_mode=active         # used by title.

    p_height=24
    # p_gap=0
    p_window_class="noshadow"
    p_line=2
    # p_padding=6

    # p_font_main="Charter-10:style=Bold"

    p_font_main="Equity Text A-11"
    p_font_main="Equity Caps B-10"

    # p_font_main="Charter-13"
    # p_font_main="Charter-10:style=Bold"

    p_font_icon="Font Awesome 5 Free Solid-8"
    p_icon_enable=false
    p_desktop_display_name=name
    # d_font="Go Mono for Powerline 14"
    d_font="Equity Text A 12"

    # p_desktop_occupied_label=$(uchar f111)
    # p_desktop_empty_label=$(uchar f1db)

    p_desktop_tiling_label=''
    p_desktop_monocle_label=$(uchar f00b)

    # st_font="Go Mono for Powerline-12:style=Regular"
    st_font="Triplicate T4c-12"
    st_font_variable="Equity Text A-13"
    p_title_only_show_active=true
    maxWinNameLen=40

    # p_title_theme="fg=#ff$(colort -t 30 525252)"
    # p_desktop_theme="fg=#ff$(colort -t 30 525252)"

    c_shadow="false"
    c_frame_opacity="1.0"
    c_shadow_opacity="0.5"
    c_shadow_radius="5"
    c_shadow_offset_x="-8"
    c_shadow_offset_y="-8"

    c_fading="false";
    c_fade_in_step="0.1"
    c_fade_out_step="0.1"
}

activeline() {
    activefg
}

line() {
    bg
}

fg() {
    elisp -r "(ns/color-shorten (ht-get ns/theme (if (ns/color-is-light-p \"$(bg)\") :foreground :background)))"
}

bg() {
    # elisp -r '(->> "#d1dae5" (-map (lambda (ns/color-lch-transform ))) )'
    gradient $total 8fe7d5 7cbefc | sed -n ${step}p

    # if [ "$lemon_target_align" = center ]; then
    # 	echo \#$background
    # else
    # 	gradient 3 176fa8 $background | sed -n ${step}p
    # fi
    return
  # gradient $total d7cdff $background | sed -n ${step}p

# $(elisp -r '(->> :accent1 (ht-get ns/theme) ns/color-shorten ns/color-pastel ns/color-pastel)')
    if [ "$lemon_target_align" = left ]; then
	    cat<<EOF | sed -n ${step}p
$(elisp -r '(->> :accent1_ (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
$(elisp -r '(->> :accent1 (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
$(elisp -r '(->> :accent1_ (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
EOF
    elif [ "$lemon_target_align" = right ]; then
	    cat<<EOF | sed -n ${step}p
$(elisp -r '(->> :accent1_ (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
$(elisp -r '(->> :accent1 (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
$(elisp -r '(->> :accent1_ (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
EOF
    else
	# maybe generate a new color for this section
	    cat<<EOF | sed -n ${step}p
$(elisp -r '(->> :background+ (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list L C H))))) ns/color-shorten)')
$(elisp -r '(->> :accent2 (ht-get ns/theme) ((lambda (c) (ns/color-lch-transform c (lambda (L C H) (list 75 C H))))) ns/color-shorten)')
$(elisp -r '(ns/color-shorten (ht-get ns/theme :accent1_))')
EOF
	# center
    fi

#     cat<<EOF | sed -n ${step}p
# $color13
# $color4
# $color12
# $color4
# $color5
# $color6
# $color7
# EOF

}

stepSetup() {
    togetherStep
    # separateStep
}

suffix() {
    if [ "$lemon_target_align" = left ]; then
	color=$(elisp -r "(face-attribute 'ns/mode-line-sep :background)")

	if $lemon_target_end; then
	    color=$(elisp -r "(face-attribute 'ns/mode-line-sep-edge :background)")
	fi
	color=$(colort -t "$color")
	# bs O3 B${color}
	bs B00000000 ":   "
    fi

    if [ "$lemon_target_align" = center ]; then
	color=$(elisp -r "(face-attribute 'ns/mode-line-sep :background)")
	color=$(colort -t "$color")
	# bs O3 B${color}
	bs B00000000 ":   "
    fi
}

prefix() {
    if [ "$lemon_target_align" = right ]; then
	color=$(elisp -r "(face-attribute 'ns/mode-line-sep :background)")
	if $lemon_target_end; then
	    color=$(elisp -r "(face-attribute 'ns/mode-line-sep-edge :background)")
	fi

	color=$(colort -t "$color")
	# echo "%{B#FF${color}}%{O3}%{B-}"
	# bs O3 B${color}
	bs B00000000 ":   "
    fi

    if [ "$lemon_target_align" = center ]; then
	color=$(elisp -r "(face-attribute 'ns/mode-line-sep :background)")
	color=$(colort -t "$color")
	# bs O3 B${color}
	bs B00000000 ":   "
    fi
}
