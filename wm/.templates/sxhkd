# -*- mode: conf -*-

# todo:
# Say I\'m playing a game, and toggle the music, but keep running forward (W)
#   it\'s easy to fat finger a close window command
# Similarly, w and f are right next to each other, so "fullscreen" and "close window" can get fat fingered
#   both of these are rather unpleasant for games

# todo: make alt the goto, config toggle

{{env.MODKEY}} + shift + w
    notify-send "todo: new force kill binding"

{{env.MODKEY}} + w
    bspc node -c

{{env.MODKEY}} + f
    fullscreen_toggle.sh

{{env.MODKEY}} + shift + f
    bspc node -t ~fullscreen

{{env.MODKEY}} + t
    SLIM=t fullscreen_toggle.sh

# take a tiled window, make it floating, but in the same position of the tile
{{env.MODKEY}} + shift + s
    nfloat

{{env.MODKEY}} + s
    bspc config pointer_follows_focus true; \
    bspc node -t $(bspc query -N -n -n .tiled >/dev/null && echo floating || echo tiled); \
    bspc node -f; \
    bspc config pointer_follows_focus false

alt + {_,shift} + Tab
    bspc node -f {next,prev}.local.normal.!hidden.tiled

{{env.MODKEY}} + {_,shift} + Tab
    bspc node -f {next,prev}.local.normal.!hidden.tiled

{{env.MODKEY}} + {_,shift,{{env.MODKEY_ALT}},ctrl} + {h,n,e,l}
    {focus,move,resize,presel}.sh {west,south,north,east}

{{env.MODKEY}} + {_,shift,{{env.MODKEY_ALT}},ctrl} + {Left,Down,Up,Right}
    {focus,move,resize,presel}.sh {west,south,north,east}

{{env.MODKEY}} + ctrl + space
    bspc node -p cancel

ctrl + {_,shift} + space
    dunstctl close{ ,-all}

# insert receptacle, or clear receptacles on current desktop
{{env.MODKEY}} + {_,shift} + r
    {bspc node -i,for win in $(bspc query -N -d -n .leaf.!window); do bspc node $win -k; done}

# rotate, balance
{{env.MODKEY}} + {_,shift} + semicolon
    bspc node $(bspc query -N -n -n .!leaf || echo @/) {-R 90,-B}

# focus the node for the given path jump
# idea: after @parent, check if bspwindows has changed, and if it hasn\'t, keep going
# todo: can we do parent.visible? window groups messy
{{env.MODKEY}} + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# todo: ask nicely for real.
{{env.MODKEY}} + shift + q
    systemctl --user stop panel; \
    zenity --question "Quit wm?" && bspc quit

{{env.MODKEY}} + shift + slash
    panelt

{{env.MODKEY}} + slash
    gapt

{{env.MODKEY}} + Return
    elisp '(ns/spawn-terminal)' || $TERMINAL

{{env.MODKEY}} + {_,shift} + space
    action='{switcher,run}'; \
    export GTK_THEME=$(theme -q gtk.theme); \
    dmenu_$action -p "$action"

{{env.MODKEY}} + {{env.MODKEY_ALT}} + space
    rofi-rbw -a copy

{{env.MODKEY}} + {_, shift} + grave
    {player.sh, mpc} toggle

# note: ensure using bluetooth if available
# workflow: turn on headphones, bt connect, walk around, toggle
# we never use these buttons from our keyboard anyway
XF86Audio{Prev,Next,Play,Pause}
    check_headphones; player.sh {prev,next,toggle,toggle}

XF86Audio{LowerVolume,RaiseVolume}
    notify-send --urgency=low "Volume: $(ponymix {decrease,increase} 4)"

# this one should always be alt on purpose
alt + Escape
    ltheme sxhkd

# mute toggle
XF86AudioMute
    ponymix toggle

# todo: if ponymix at 100 update player.sh volume
# pretend +
{{env.MODKEY}} + {minus,equal}
    notify-send --urgency=low "Volume: $(ponymix {decrease,increase} 4)"

{{env.MODKEY}} + shift + {minus,equal}
    notify-send --urgency=low "Volume: $(player.sh volume 0.04{-,+})"

XF86MonBrightness{Down,Up}
    xbright {down,up}

# you are already using comma and period for window children lol
# < > `
# super + {comma,period,grave}
#     player.sh {prev,next,toggle}

# F9
#     sh -c "$(. $HOME/.profile && shot)"

F8
    utf8

# F9
#     factorio

# idea for these: screenshot buttons - or a popup menu
@button8
    pmenu_switcher
    # SWITCH_KIND=do_narrow_piemenu dmenu_switcher switcher
    # pointer_menu
    # notify-send "you pressed mouse8"

button9
    bash -ic ". $HOME/.profile; shot"
    # notify-send "you pressed mouse9"


{{env.MODKEY}} + 9
    SWITCH='meta: twitter' dmenu_switcher

########
# tags #
########

{{env.MODKEY}} + d
    dismiss.sh

{{env.MODKEY}} + {_,shift,control} + {i,o,u,y}
    btags {focus,set-tag-on-wids,show-only} ^{1,2,3,4}

{{env.MODKEY}} + {_,shift,control} + {1-7}
    btags {focus,set-tag-on-wids,show-only} ^{1-7}

##############
# workspaces #
##############

# super + y
#     bspc node -f older

# super + {1-4}
#     bspc desktop -f focused:^{1-4}

# super + shift + {1-4}
#     bspc node -d focused:^{1-4}

# super + {i,o,u,y}
#     bspc desktop -f focused:^{1,2,3,4}

# super + shift + {i,o,u,y}
#     bspc node -d focused:^{1,2,3,4}
